{"version":3,"sources":["logo.svg","Button.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","Button","props","className","variant","onClick","children","getRandomNumber","x","Math","floor","random","ApiConnectionState","NO_TOKEN_ENTERED","INVALID_TOKEN","VALID_TOKEN","App","state","tracksNumber","tracks","currentTrack","answersTracks","recordScore","currentScore","apiConnectionState","checkAnswer","bind","selectNextTrack","switchTrack","renderContent","fetchTracks","apiToken","fetch","method","headers","Authorization","then","response","status","console","log","Error","json","data","items","length","setState","generateAnswerTracks","catch","array","counter","index","temp","shuffleArray","track","id","this","swal","newScore","newTrack","src","logo","alt","onFormSubmit","target","href","url","preview_url","playStatus","Sound","PLAYING","map","name","Component","AlbumCover","albumUrl","album","images","style","width","height","ApiTokenForm","value","handleChange","handleSubmit","event","preventDefault","onSubmit","type","onChange","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ad42a2a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e359ad39.svg\";","import './Button.css';\n\nimport React from 'react';\n\nconst Button = (props) => (\n  <button className={props.variant} onClick={props.onClick}>{props.children}</button>\n);\n\nexport default Button;\n","import './App.css';\nimport './App.css';\n\nimport React, { Component } from 'react';\nimport Sound from 'react-sound';\n\nimport Button from './Button';\nimport logo from './logo.svg';\n\n/*global swal*/\nfunction shuffleArray(array) {\n  let counter = array.length;\n\n  while (counter > 0) {\n    let index = getRandomNumber(counter);\n    counter--;\n    let temp = array[counter];\n    array[counter] = array[index];\n    array[index] = temp;\n  }\n\n  return array;\n}\n\n/* Return a random number between 0 included and x excluded */\nfunction getRandomNumber(x) {\n  return Math.floor(Math.random() * x);\n}\n\nconst ApiConnectionState = {\n  NO_TOKEN_ENTERED: 'NO_TOKEN_ENTERED',\n  INVALID_TOKEN: 'INVALID_TOKEN',\n  VALID_TOKEN: 'VALID_TOKEN'\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      tracksNumber: 0,\n      tracks: null,\n      currentTrack: null,\n      answersTracks: [],\n      recordScore: 0,\n      currentScore: 0,\n      apiConnectionState: ApiConnectionState.NO_TOKEN_ENTERED\n    };\n\n    this.checkAnswer = this.checkAnswer.bind(this);\n    this.selectNextTrack = this.selectNextTrack.bind(this);\n    this.switchTrack = this.switchTrack.bind(this);\n    this.renderContent = this.renderContent.bind(this);\n    this.fetchTracks = this.fetchTracks.bind(this);\n  }\n\n  fetchTracks(apiToken) {\n    fetch('https://api.spotify.com/v1/me/tracks?limit=50', {\n      method: 'GET',\n      headers: {\n      Authorization: 'Bearer ' + apiToken,\n      },\n    })\n    .then(response => {\n      if (response.status === 401) {\n        console.log(\"your Spotify API token has expired, please get another one\");\n        throw new Error(response);\n      }\n      return response;\n    })\n    .then(response => response.json())\n    .then((data) => {\n      const tracksNumber = data.items.length;\n      const currentTrack = data.items[getRandomNumber(tracksNumber)];\n      this.setState({\n        tracksNumber,\n        tracks: data.items,\n        currentTrack,\n        answersTracks: this.generateAnswerTracks(data.items, currentTrack),\n        apiConnectionState: ApiConnectionState.VALID_TOKEN\n      });\n    })\n    .catch(() => {\n      this.setState({\n        apiConnectionState: ApiConnectionState.INVALID_TOKEN\n      });\n    })\n  }\n\n  generateAnswerTracks(tracks, currentTrack) {\n    const secondTrack = tracks[getRandomNumber(tracks.length)];\n    const thirdTrack = tracks[getRandomNumber(tracks.length)];\n\n    const roundTracks = [currentTrack, secondTrack, thirdTrack];\n    return shuffleArray(roundTracks);\n  }\n\n  checkAnswer(track) {\n    if (track.track.id === this.state.currentTrack.track.id) {\n      swal('Bravo !', 'Tu as trouvÃ© la bonne chanson! ;)', 'success')\n      .then(() => {\n        this.selectNextTrack();\n        const newScore = this.state.currentScore + 1;\n        this.setState({\n          currentScore: newScore,\n        });\n      });\n    }\n    else {\n      swal('Oups !', \"Ce n'est pas la bonne chanson!\", 'error')\n      .then(() => {\n        this.setState({\n          currentScore: 0,\n          recordScore: this.state.currentScore > this.state.recordScore ? this.state.currentScore : this.state.recordScore\n        });\n      });\n    }\n  }\n\n  selectNextTrack() {\n    const newTrack = this.state.tracks[getRandomNumber(this.state.tracksNumber)];\n    this.setState({\n      currentTrack: newTrack,\n      answersTracks: this.generateAnswerTracks(this.state.tracks, newTrack)\n    });\n  }\n\n  switchTrack() {\n    this.setState({\n      currentScore: 0\n    });\n    this.selectNextTrack();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n          <ApiTokenForm onFormSubmit={this.fetchTracks} />\n        </header>\n        { this.renderContent() }\n      </div>\n    );\n  }\n\n  renderContent() {\n    switch (this.state.apiConnectionState) {\n      case ApiConnectionState.NO_TOKEN_ENTERED:\n        return <div className=\"App-info\">Enter an Api token to start playing! ð (get one <a target=\"_blank\" href=\"https://developer.spotify.com/console/get-current-user-saved-tracks/?market=&limit=&offset=\">here</a>)</div>;\n      case ApiConnectionState.INVALID_TOKEN:\n        return <div className=\"App-info\">Uh oh, seems like your token is invalid! ð Your token might have expired. Please generate one again!</div>;\n      case ApiConnectionState.VALID_TOKEN:\n        return (\n          <>\n            <div className=\"App-images\">\n              <AlbumCover track={this.state.currentTrack} />\n              <Sound url={this.state.currentTrack.track.preview_url} playStatus={Sound.status.PLAYING}/>\n            </div>\n            <div className=\"Scores-container\">\n              <div><span className=\"Score-label\">Score -</span> {this.state.currentScore}</div>\n              <div><span className=\"Score-label\">Record -</span> {this.state.recordScore}</div>\n            </div>\n            <div className=\"App-buttons\">\n              {\n                this.state.answersTracks.map((track) => <Button variant=\"primary\" onClick={() => this.checkAnswer(track)}>{track.track.name}</Button>)\n              }\n            </div>\n            <div className=\"App-buttons\">\n              <Button variant=\"secondary\" onClick={this.switchTrack}>Switch track!</Button>\n            </div>\n          </>\n        );\n      default:\n        return;\n    }\n  }\n}\n\nclass AlbumCover extends Component {\n  render() {\n    const albumUrl = this.props.track.track.album.images[0].url;\n    return (\n      <div>\n        <img src={albumUrl} style={{ width: 300, height: 300 }} />\n      </div>);\n  }\n}\n\nclass ApiTokenForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.onFormSubmit(this.state.value);\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"Form-field\">\n          <span className=\"Form-label\">Enter your API token</span>\n          <input className=\"Form-input\" type=\"text\" onChange={this.handleChange} value={this.state.value} />\n          <Button variant='primary' type=\"submit\">Fetch tracks</Button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}